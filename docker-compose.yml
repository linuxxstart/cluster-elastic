version: '2.2'

services:
  es01:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    cpus: "0.25"
    mem_limit: 2g
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=elastic
      - node.master=true
      - node.data=false
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms1000m -Xmx1000m"
      - xpack.monitoring.collection.enabled=true
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
#      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
#      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
      - "TZ=America/Sao_Paulo"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes: ['es01:/usr/share/elasticsearch/data','certs:$CERTS_DIR'] 
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    cpus: "0.25"
    mem_limit: 2g
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=elastic
      - node.master=false
      - node.data=true
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms1000m -Xmx1000m"
      - xpack.monitoring.collection.enabled=true
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.http.ssl.key=$CERTS_DIR/es02/es02.key
#      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
#      - xpack.security.http.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es02/es02.key
      - "TZ=America/Sao_Paulo"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes: ['es02:/usr/share/elasticsearch/data','certs:$CERTS_DIR']
    networks:
      - elastic
  

  es03:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    cpus: "0.25"
    mem_limit: 2g
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=elastic
      - node.master=false
      - node.data=true
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms1000m -Xmx1000m"
      - xpack.monitoring.collection.enabled=true
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.http.ssl.key=$CERTS_DIR/es03/es03.key
#      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
#      - xpack.security.http.ssl.certificate=$CERTS_DIR/es03/es03.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es03/es03.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es03/es03.key
      - "TZ=America/Sao_Paulo"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes: ['es03:/usr/share/elasticsearch/data','certs:$CERTS_DIR']
    networks:
      - elastic
  

  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    command: /usr/bin/true
    depends_on: {"es01": {"condition": "service_healthy"}}
   
  kibana:
    restart: always
    image: docker.elastic.co/kibana/kibana:7.6.2
    cpus: "0.25"
    mem_limit: 2g
    container_name: kibana
    environment:
      - "TZ=America/Sao_Paulo"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 5601:5601
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic

  logstash:
    restart: always
    image: docker.elastic.co/logstash/logstash:7.6.2
    cpus: "0.25"
    mem_limit: 2g
    container_name: logstash
    environment:
      - "LS_JAVA_OPTS=-Xmx1024m -Xms1024m"
      - "TZ=America/Sao_Paulo"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 5514:5514/tcp
      - 5514:5514/udp
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    networks:
      - elastic
 
networks:
  elastic:

volumes: {"es01", "es02", "es03", "certs"}
